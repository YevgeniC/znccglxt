<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        <mapper namespace="se.zust.dao.OutlibraryDao">
         <!-- 配置resultMap属性，进行表字段与实体类属性映射 -->
    	<resultMap id="outlibraryMap" type="se.zust.entity.Outlibrary" >
        <id column="pid" property="pid"  />
	    <result column="pnum" property="pnum"  />
	    <result column="pname" property="pname"  />
	    <result column="area" property="area" />
	    <result column="room" property="room"  />
	    <result column="out_date" property="outTime"  jdbcType="TIMESTAMP" />
	    <result column="address" property="address"  />
		<result column="out_user" property="outUser"  />
		<result column="goods_id" property="goodsID" />
    </resultMap>
    <insert id="addOutlibrary" parameterType="se.zust.entity.Outlibrary">
    	INSERT INTO outlibrary(goods_id,pname,pnum,area,room,out_date,address,out_user) VALUES
    	(#{goodsID,jdbcType=VARCHAR},#{pname,jdbcType=VARCHAR},#{pnum,jdbcType=INTEGER},
    	#{area,jdbcType=VARCHAR},#{room,jdbcType=VARCHAR},#{outTime,jdbcType=VARCHAR},
    	#{address,jdbcType=VARCHAR},#{outUser,jdbcType=VARCHAR})
	</insert>
	<delete id="deleteOutibrary" parameterType="Integer">
		DELETE FROM outlibrary where pid = #{pid}
	</delete>

	<select id="selectOutlibrary" resultMap="outlibraryMap" >
		select *
		from outlibrary
		<where>
            <if test="search != '' and search != null">
                pname like "%"#{search,jdbcType=VARCHAR}"%" or pid LIKE "%"#{search,jdbcType=VARCHAR}"%"
            </if>
		</where>
		Order BY out_date DESC
        limit #{start},#{pageSize}
	</select>
	<select id="selectOutlibraryCount" resultType="Integer">
		select IFNULL(count(*),0)
		from outlibrary
        <where>
            <if test="search != '' and search != null">
                pname like "%"#{search,jdbcType=VARCHAR}"%" or pid LIKE "%"#{search,jdbcType=VARCHAR}"%"
            </if>
        </where>
	</select>
</mapper>
        